{"ast":null,"code":"var _jsxFileName = \"/Users/william/todo-list/clinet/src/Router/App.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { AuthContext } from '../contexts';\nimport { useState, useEffect } from 'react';\nimport Login from '../View/Login';\nimport List from '../View/List';\nimport CreateUser from '../View/CreateUser';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ProtectedRoutes from './ProtectedRoutes';\nimport { getMe } from '../Model/LoginAPI';\nimport { getAuthToken } from '../Model/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(false);\n  console.log(\"APP\" + user);\n  useEffect(() => {\n    // 以 getAuthToken 從 localStorage 讀取 token\n    if (getAuthToken()) {\n      // 有 token 才 call API\n      getMe().then(response => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/createUser\",\n          element: /*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/list\",\n            element: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Tr6NHhjhUNtJxFA/Y5oEDLx6v2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AuthContext","useState","useEffect","Login","List","CreateUser","BrowserRouter","Router","Routes","Route","ProtectedRoutes","getMe","getAuthToken","App","user","setUser","console","log","then","response","ok","data"],"sources":["/Users/william/todo-list/clinet/src/Router/App.js"],"sourcesContent":["import '../App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { AuthContext } from '../contexts';\nimport { useState, useEffect } from 'react';\nimport Login from '../View/Login';\nimport List from '../View/List';\nimport CreateUser from '../View/CreateUser';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ProtectedRoutes from './ProtectedRoutes';\nimport {getMe} from '../Model/LoginAPI'\nimport { getAuthToken } from '../Model/utils'\nfunction App() {\n  const [user, setUser] = useState(false);\n  console.log(\"APP\" + user);\n  useEffect(() => {\n    // 以 getAuthToken 從 localStorage 讀取 token\n    if (getAuthToken()) {\n      // 有 token 才 call API\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n  \n  return (\n  <AuthContext.Provider value={{user, setUser}}>\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/createUser\" element={<CreateUser />} />\n        <Route element ={<ProtectedRoutes/>}>\n          <Route path=\"/list\" element={<List />} />\n        </Route>\n      </Routes>\n    </Router>\n\n  </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAO,kCAAkC;AACzC,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAAQC,KAAK,QAAO,mBAAmB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAAA;AAC7C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvCe,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGH,IAAI,CAAC;EACzBZ,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,YAAY,EAAE,EAAE;MAClB;MACAD,KAAK,EAAE,CAACO,IAAI,CAAEC,QAAQ,IAAK;QACzB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACfL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;QACxB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACA,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACP,IAAI;MAAEC;IAAO,CAAE;IAAA,uBAC3C,QAAC,MAAM;MAAA,uBACL,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3C,QAAC,KAAK;UAAC,IAAI,EAAC,aAAa;UAAC,OAAO,eAAE,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACrD,QAAC,KAAK;UAAC,OAAO,eAAG,QAAC,eAAe;YAAA;YAAA;YAAA;UAAA,QAAG;UAAA,uBAClC,QAAC,KAAK;YAAC,IAAI,EAAC,OAAO;YAAC,OAAO,eAAE,QAAC,IAAI;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACnC;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEY;AAEzB;AAAC,GA7BQF,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}