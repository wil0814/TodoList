{"ast":null,"code":"export const login = (Account, Password) => {\n  return fetch(`http://localhost:8080/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      Account,\n      Password\n    })\n  }).then(res => res.json());\n};\nexport const getMe = () => {\n  const token = localStorage.getItem(\"token\");\n  return fetch(`http://localhost:8080/user`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `${token}`\n    }\n  }).then(res => res.json());\n};\nexport const createUser = (UserName, UserPassword) => {\n  return fetch(`http://localhost:8080/createuser`), {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      UserName,\n      UserPassword\n    })\n  };\n};","map":{"version":3,"names":["login","Account","Password","fetch","method","headers","body","JSON","stringify","then","res","json","getMe","token","localStorage","getItem","Authorization","createUser","UserName","UserPassword"],"sources":["/Users/william/todo-list/clinet/src/Model/LoginAPI.js"],"sourcesContent":["export const login = (Account, Password) => {\n    return fetch(`http://localhost:8080/login`,{\n        method : \"POST\",\n        headers:{\n            \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            Account,\n            Password,\n        }),\n    })\n    .then((res)=>res.json());\n};\n\nexport const getMe = () => {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`http://localhost:8080/user`,{\n        method:\"GET\",\n        headers:{\n            Authorization: `${token}`,\n        },\n    })\n    .then((res)=>res.json());\n}\n\nexport const createUser = (UserName, UserPassword)=>{\n    return fetch(`http://localhost:8080/createuser`),{\n        method:\"POST\",\n        headers:{\n            \"content-type\":\"application/json\",\n        },\n        body: JSON.stringify({\n            UserName,\n            UserPassword,\n        }),\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,CAACC,OAAO,EAAEC,QAAQ,KAAK;EACxC,OAAOC,KAAK,CAAE,6BAA4B,EAAC;IACvCC,MAAM,EAAG,MAAM;IACfC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,OAAO;MACPC;IACJ,CAAC;EACL,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAM;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOZ,KAAK,CAAE,4BAA2B,EAAC;IACtCC,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJW,aAAa,EAAG,GAAEH,KAAM;IAC5B;EACJ,CAAC,CAAC,CACDJ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,CAACC,QAAQ,EAAEC,YAAY,KAAG;EAChD,OAAOhB,KAAK,CAAE,kCAAiC,CAAC,EAAC;IAC7CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBU,QAAQ;MACRC;IACJ,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}