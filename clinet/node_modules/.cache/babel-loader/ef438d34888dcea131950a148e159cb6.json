{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport { useLocation, Outlet, Navigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts';\nimport { getMe } from '../Model/LoginAPI';\nimport { getAuthToken } from '../Model/utils';\nconst ProtectedRoutes = () => {\n  _s();\n  console.log(\"ProtectedRoutes\");\n  const {\n    user,\n    setUser\n  } = useContext(AuthContext);\n  const location = useLocation();\n  console.log(\"userloggedin \" + user);\n\n  // if(getAuthToken()){\n  //     console.log(\"GA\"+getAuthToken());\n  //     getMe()\n  //     .then((res)=>{\n  //         console.log(\"123\");\n  //         if(res.success){\n  //             setUser(true);\n  //         }\n  //     })\n  //     .finally(()=>{\n\n  //     });\n\n  // }else{\n  //     return <Navigate to='/login' replace state={{ from: location }} />\n  // }\n};\n_s(ProtectedRoutes, \"+LA4HmAAnnCP6e/RYbEIOwlyjug=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["useContext","useEffect","useLocation","Outlet","Navigate","AuthContext","getMe","getAuthToken","ProtectedRoutes","console","log","user","setUser","location"],"sources":["/Users/william/todo-list/clinet/src/Router/ProtectedRoutes.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\nimport {useLocation, Outlet, Navigate} from 'react-router-dom';\nimport { AuthContext } from '../contexts';\nimport {getMe} from '../Model/LoginAPI'\nimport { getAuthToken } from '../Model/utils'\n\n\nconst ProtectedRoutes = () => {\n    console.log(\"ProtectedRoutes\");\n    const {user, setUser} = useContext(AuthContext)\n    const location = useLocation()\n    console.log(\"userloggedin \"+user);\n\n    // if(getAuthToken()){\n    //     console.log(\"GA\"+getAuthToken());\n    //     getMe()\n    //     .then((res)=>{\n    //         console.log(\"123\");\n    //         if(res.success){\n    //             setUser(true);\n    //         }\n    //     })\n    //     .finally(()=>{\n\n    //     });\n        \n    // }else{\n    //     return <Navigate to='/login' replace state={{ from: location }} />\n    // }\n\n\n\n\n}\n\nexport default ProtectedRoutes"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAAQC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAO,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,KAAK,QAAO,mBAAmB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAG7C,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9B,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGZ,UAAU,CAACK,WAAW,CAAC;EAC/C,MAAMQ,QAAQ,GAAGX,WAAW,EAAE;EAC9BO,OAAO,CAACC,GAAG,CAAC,eAAe,GAACC,IAAI,CAAC;;EAEjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;AAKJ,CAAC;AAAA,GA1BKH,eAAe;EAAA,QAGAN,WAAW;AAAA;AAAA,KAH1BM,eAAe;AA4BrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}