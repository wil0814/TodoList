{"ast":null,"code":"var _jsxFileName = \"/Users/william/todo-list/clinet/src/View/ChangeList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Modal, Form } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalExampleModal = () => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  return (\n    /*#__PURE__*/\n    // <Button basic color='green'>\n    _jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        basic: true,\n        color: \"green\",\n        children: \"Show Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Select a Photo123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Nope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Yep, that's me\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: () => setOpen(false),\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ModalExampleModal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = ModalExampleModal;\nexport default ModalExampleModal;\nvar _c;\n$RefreshReg$(_c, \"ModalExampleModal\");","map":{"version":3,"names":["React","Button","Modal","Form","ModalExampleModal","open","setOpen","useState"],"sources":["/Users/william/todo-list/clinet/src/View/ChangeList.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Modal, Form } from \"semantic-ui-react\";\n\nconst ModalExampleModal = ()=>{\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    // <Button basic color='green'>\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button basic color=\"green\">\n          Show Modal\n        </Button>\n      }\n    >\n      <Modal.Header>Select a Photo123</Modal.Header>\n      <Modal.Content >\n        <Form>\n          <Form.Field>\n            <label>First Name</label>\n            <input placeholder='First Name' />\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setOpen(false)}>\n          Nope\n        </Button>\n        <Button\n          content=\"Yep, that's me\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={() => setOpen(false)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default ModalExampleModal;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AAAC;AAExD,MAAMC,iBAAiB,GAAG,MAAI;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;EAE7C;IAAA;IACE;IACA,QAAC,KAAK;MACJ,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAK,CAAE;MAC9B,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAI,CAAE;MAC5B,IAAI,EAAED,IAAK;MACX,OAAO,eACL,QAAC,MAAM;QAAC,KAAK;QAAC,KAAK,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG5B;MAAA,wBAED,QAAC,KAAK,CAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiC,eAC9C,QAAC,KAAK,CAAC,OAAO;QAAA,uBACZ,QAAC,IAAI;UAAA,uBACH,QAAC,IAAI,CAAC,KAAK;YAAA,wBACT;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAyB,eACzB;cAAO,WAAW,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA;QACvB;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACO,eAChB,QAAC,KAAK,CAAC,OAAO;QAAA,wBACZ,QAAC,MAAM;UAAC,KAAK,EAAC,OAAO;UAAC,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAK,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE3C,eACT,QAAC,MAAM;UACL,OAAO,EAAC,gBAAgB;UACxB,aAAa,EAAC,OAAO;UACrB,IAAI,EAAC,WAAW;UAChB,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAK,CAAE;UAC9B,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACY;IAAA;MAAA;MAAA;MAAA;IAAA;EACV;AAEZ,CAAC;AAAA,GAtCKF,iBAAiB;AAAA,KAAjBA,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}