{"ast":null,"code":"var _jsxFileName = \"/Users/william/todo-list/clinet/src/View/ChangeList.js\",\n  _s = $RefreshSig$();\nimport { Button, Form, Modal } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalExampleModal(props) {\n  _s();\n  console.log(props);\n  const [open, setopen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setopen(false),\n    onOpen: () => setopen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      color: \"yellow\",\n      className: props.Status,\n      children: \"\\u4FEE\\u6539\\u5167\\u5BB9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 20\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"\\u4FEE\\u6539TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"TODO\\u540D\\u7A31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"\\u8ACB\\u5728\\u6B64\\u8F38\\u5165TODO\\u540D\\u7A31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setopen(false),\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Yep, that's me\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setopen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalExampleModal, \"7++oTooKr8lD88fMniQ9c0dEBGo=\");\n_c = ModalExampleModal;\nexport default ModalExampleModal;\nvar _c;\n$RefreshReg$(_c, \"ModalExampleModal\");","map":{"version":3,"names":["Button","Form","Modal","React","useState","ModalExampleModal","props","console","log","open","setopen","Status"],"sources":["/Users/william/todo-list/clinet/src/View/ChangeList.js"],"sourcesContent":["import { Button, Form, Modal } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\n\nfunction ModalExampleModal(props) {\n    console.log(props);\n    const [open, setopen] = useState(false);\n    return (\n        <Modal\n          onClose={() => setopen(false)}\n          onOpen={() => setopen(true)}\n          open={open}\n          trigger={<Button basic color='yellow' className={props.Status}>修改內容</Button>}\n        >\n          <Modal.Header>修改TODO</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n            <Form>\n                <Form.Field>\n                <label>TODO名稱</label>\n                <input placeholder=\"請在此輸入TODO名稱\"/>\n                </Form.Field>\n            </Form>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"black\" onClick={() => setopen(false)}>\n              Nope\n            </Button>\n            <Button\n              content=\"Yep, that's me\"\n              labelPosition=\"right\"\n              icon=\"checkmark\"\n              onClick={() => setopen(false)}\n              positive\n            />\n          </Modal.Actions>\n        </Modal>\n    );\n  }\n\nexport default ModalExampleModal;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,iBAAiB,CAACC,KAAK,EAAE;EAAA;EAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvC,oBACI,QAAC,KAAK;IACJ,OAAO,EAAE,MAAMM,OAAO,CAAC,KAAK,CAAE;IAC9B,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAI,CAAE;IAC5B,IAAI,EAAED,IAAK;IACX,OAAO,eAAE,QAAC,MAAM;MAAC,KAAK;MAAC,KAAK,EAAC,QAAQ;MAAC,SAAS,EAAEH,KAAK,CAACK,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;IAAA,wBAE7E,QAAC,KAAK,CAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACnC,QAAC,KAAK,CAAC,OAAO;MAAA,uBACZ,QAAC,KAAK,CAAC,WAAW;QAAA,uBAClB,QAAC,IAAI;UAAA,uBACD,QAAC,IAAI,CAAC,KAAK;YAAA,wBACX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAqB,eACrB;cAAO,WAAW,EAAC;YAAa;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA;QACrB;UAAA;UAAA;UAAA;QAAA;MACV;QAAA;QAAA;QAAA;MAAA;IACa;MAAA;MAAA;MAAA;IAAA,QACN,eAChB,QAAC,KAAK,CAAC,OAAO;MAAA,wBACZ,QAAC,MAAM;QAAC,KAAK,EAAC,OAAO;QAAC,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3C,eACT,QAAC,MAAM;QACL,OAAO,EAAC,gBAAgB;QACxB,aAAa,EAAC,OAAO;QACrB,IAAI,EAAC,WAAW;QAChB,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAK,CAAE;QAC9B,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACY;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,GAnCML,iBAAiB;AAAA,KAAjBA,iBAAiB;AAqC1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}