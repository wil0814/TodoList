{"ast":null,"code":"import { useContext, useEffect, useState } from 'react';\nimport { useLocation, Outlet, Navigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts';\nimport { getMe } from '../Model/LoginAPI';\nimport { getAuthToken } from '../Model/utils';\nconst ProtectedRoutes = () => {\n  //     console.log(\"ProtectedRoutes\");\n  //     // const {user, setUser} = useContext(AuthContext)\n  //     // const [login, setLogin] = useState(false);\n  //     const location = useLocation();\n  //     // console.log(\"userloggedin \"+login);\n  //     const ANS = ()=>{\n  //         if(getAuthToken()){\n  //             return <Outlet/>;\n  //         }else{\n  //             return <Navigate to='/login' replace state={{ from: location }} />;\n  //         }\n  //     }\n\n  //     return <ANS/>;\n  return () => {\n    getMe().then(res => {\n      res.success === ok ? console.log(\"ok\") : console(\"bad\");\n    });\n  };\n};\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["useContext","useEffect","useState","useLocation","Outlet","Navigate","AuthContext","getMe","getAuthToken","ProtectedRoutes","then","res","success","ok","console","log"],"sources":["/Users/william/todo-list/clinet/src/Router/ProtectedRoutes.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport {useLocation, Outlet, Navigate} from 'react-router-dom';\nimport { AuthContext } from '../contexts';\nimport {getMe} from '../Model/LoginAPI'\nimport { getAuthToken } from '../Model/utils'\n\n\nconst ProtectedRoutes = () => {\n//     console.log(\"ProtectedRoutes\");\n//     // const {user, setUser} = useContext(AuthContext)\n//     // const [login, setLogin] = useState(false);\n//     const location = useLocation();\n//     // console.log(\"userloggedin \"+login);\n//     const ANS = ()=>{\n//         if(getAuthToken()){\n//             return <Outlet/>;\n//         }else{\n//             return <Navigate to='/login' replace state={{ from: location }} />;\n//         }\n//     }\n\n\n//     return <ANS/>;\n    return ()=>{\n        getMe()\n        .then((res)=>{\n            res.success === ok ?console.log(\"ok\"):console(\"bad\");\n        })\n    }\n}\n\n\n\n\nexport default ProtectedRoutes"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAAQC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAO,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,KAAK,QAAO,mBAAmB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAG7C,MAAMC,eAAe,GAAG,MAAM;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACI,OAAO,MAAI;IACPF,KAAK,EAAE,CACNG,IAAI,CAAEC,GAAG,IAAG;MACTA,GAAG,CAACC,OAAO,KAAKC,EAAE,GAAEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC,GAACD,OAAO,CAAC,KAAK,CAAC;IACxD,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAAA,KAtBKL,eAAe;AA2BrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}