{"ast":null,"code":"var _jsxFileName = \"/Users/william/todo-list/clinet/src/Router/ProtectedRoutes.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { useLocation, Outlet, Navigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoutes = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const location = useLocation();\n  getMe().then(res => {\n    console.log(res);\n  });\n  return 1 ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true,\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ProtectedRoutes, \"vJGcqdZ+nHkgD9dr7+myclDmKbA=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["useContext","useLocation","Outlet","Navigate","AuthContext","ProtectedRoutes","user","location","getMe","then","res","console","log","from"],"sources":["/Users/william/todo-list/clinet/src/Router/ProtectedRoutes.js"],"sourcesContent":["import { useContext } from 'react';\nimport {useLocation, Outlet, Navigate} from 'react-router-dom';\nimport { AuthContext } from '../contexts';\n\n\nconst ProtectedRoutes = () => {\n    const {user} = useContext(AuthContext)\n    const location = useLocation()\n    getMe()\n    .then((res)=>{\n        console.log(res);\n    });\n\n    return 1 ? (\n        <Outlet />\n    ) : (\n        <>\n            <Navigate to='/login' replace state={{ from: location }} />\n        </>\n    )\n}\n\nexport default ProtectedRoutes"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAAQC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAO,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,aAAa;AAAC;AAAA;AAG1C,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAM;IAACC;EAAI,CAAC,GAAGN,UAAU,CAACI,WAAW,CAAC;EACtC,MAAMG,QAAQ,GAAGN,WAAW,EAAE;EAC9BO,KAAK,EAAE,CACNC,IAAI,CAAEC,GAAG,IAAG;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,CAAC,CAAC;EAEF,OAAO,CAAC,gBACJ,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG,gBAEV;IAAA,uBACI,QAAC,QAAQ;MAAC,EAAE,EAAC,QAAQ;MAAC,OAAO;MAAC,KAAK,EAAE;QAAEG,IAAI,EAAEN;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA;EAAG,iBAElE;AACL,CAAC;AAAA,GAfKF,eAAe;EAAA,QAEAJ,WAAW;AAAA;AAAA,KAF1BI,eAAe;AAiBrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}